#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Classe\ qui\ sert\ repr\u00E9senter\ chacunes\ des\ pi\u00E8ces\ que\ le\ joueur\ peut\ visiter\ dans\ le\ jeu\r\n\r\n\ @author\ Alexian\ Plancke\r\n\ @version\ Finale\r\n\ \r\n
comment1.params=pName\ pD\ pI\ pTeleport
comment1.target=Room(java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment1.text=\r\n\ Constructeur\ naturel\r\n\ @param\ pName\ String\ Nom\ de\ la\ salle\r\n\ @param\ pD\ String\ Description\ de\ la\ salle\r\n\ @param\ pI\ String\ Nom\ de\ l'image\r\n
comment10.params=pName\ pDescription
comment10.target=Character\ addCharacter(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ Permet\ d'ajouter\ un\ personnage\r\n\ @param\ pName\ String\ Nom\ du\ personnage\r\n\ @return\ \ Le\ nouveau\ personnage\r\n
comment11.params=
comment11.target=java.lang.String\ getLongDescription()
comment11.text=\r\n\ Retourne\ la\ description\ d\u00E9taill\u00E9e\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ La\ description\ d\u00E9taill\u00E9e\ de\ la\ pi\u00E8ce\r\n
comment12.params=
comment12.target=java.lang.String\ getImageName()
comment12.text=\r\n\ Retourne\ la\ chemin\ vers\ l'image\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ Le\ chemin\ d'acc\u00E8s\ \u00E0\ l'image\r\n
comment13.params=
comment13.target=boolean\ getTeleportRoom()
comment13.text=\r\n\ Retourne\ un\ bool\u00E9en\ qui\ indique\ si\ la\ pi\u00E8ce\ est\ une\ salle\ de\ t\u00E9l\u00E9portation\ \ \ \ \r\n\ @return\ \ \ \ \ \ Vrai\ si\ c'est\ une\ salle\ de\ t\u00E9leportation\r\n
comment14.params=pFromRoom\ pNorthExit\ pSouthExit\ pEastExit\ pWestExit
comment14.target=void\ setExits(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment14.text=\r\n\ D\u00E9finis\ les\ sorties\r\n\ @param\ pNorthExit\ Room\ Sortie\ Nord\r\n\ @param\ pSouthExit\ Room\ Sortie\ Sud\r\n\ @param\ pEastExit\ Room\ Sortie\ Est\r\n\ @param\ pWestExit\ Room\ Sortie\ Ouest\r\n
comment15.params=pFromRoom\ pDirection\ pExit
comment15.target=void\ setExit(java.lang.String,\ java.lang.String,\ java.lang.String)
comment15.text=\r\n\ Ajoute\ une\ sortie\r\n\ @param\ pDirection\ String\ La\ direction\ \u00E0\ rajouter\r\n\ @param\ pExit\ Room\ Room\ La\ pi\u00E8ce\ qui\ se\ trouve\ dans\ cette\ direction\ \ \r\n
comment16.params=pFromRoom\ pDirection\ pExit\ pLockCode\ pLocked
comment16.target=void\ setExit(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment16.text=\r\n\ Ajoute\ une\ sortie\r\n\ @param\ pFromRoom\ String\ \ A\ partir\ de\ quelle\ pi\u00E8ce\r\n\ @param\ pDirection\ String\ La\ direction\ \u00E0\ rajouter\r\n\ @param\ pExit\ Room\ Room\ La\ pi\u00E8ce\ qui\ se\ trouve\ dans\ cette\ direction\ \ \r\n\ @param\ pLockCode\ String\ Le\ code\ de\ la\ serrure\r\n\ @param\ pLocked\ boolean\ La\ serrure\ serrure\ est-elle\ verrouill\u00E9e?\r\n
comment17.params=pFromRoom\ pDirection\ pExit\ pError
comment17.target=void\ setTrappedExit(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment17.text=\r\n\ Ajoute\ une\ sortie\ pi\u00E9g\u00E9e\r\n\ @param\ pFromRoom\ String\ \ A\ partir\ de\ quelle\ pi\u00E8ce\r\n\ @param\ pDirection\ String\ La\ direction\ \u00E0\ rajouter\r\n\ @param\ pExit\ Room\ Room\ La\ pi\u00E8ce\ qui\ se\ trouve\ dans\ cette\ direction\ \ \r\n\ @param\ pError\ String\ Le\ code\ du\ message\ \u00E0\ renvoyer\ si\ on\ tente\ d'ouvrir\ la\ porte\r\n
comment18.params=pDirection
comment18.target=Door\ getExit(java.lang.String)
comment18.text=\r\n\ Accesseur\ sur\ une\ sortie\ d'une\ salle\ en\ fonction\ de\ la\ direction\ fournie\r\n\ @param\ pDirection\ String\ La\ direction\ fournie\r\n\ @return\ La\ porte\ de\ sortie\ dans\ cette\ direction\r\n
comment19.params=pRoomName
comment19.target=void\ setTeleportRoom(java.lang.String)
comment19.text=\r\n\ Pour\ le\ mode\ test\ uniquement,\ sp\u00E9cifie\ la\ prochaine\ pi\u00E8ce\ pour\ une\ "t\u00E9l\u00E9poter\ room"\r\n\ @param\ pRoomName\ String\ \ \ \ \ Le\ nom\ de\ la\ prochaine\ pi\u00E8ce\ pour\ se\ t\u00E9l\u00E9porter\ \r\n
comment2.params=pName
comment2.target=Room\ get(java.lang.String)
comment2.text=\r\n\ Retrouve\ une\ pi\u00E8ce\ connaissant\ son\ nom\r\n\ @param\ pName\ String\ Nom\ de\ la\ salle\r\n\ @return\ \ \ \ \ \ La\ pi\u00E8ce\r\n
comment20.params=
comment20.target=java.lang.String\ getLocationInfo()
comment20.text=\r\n\ Renvoie\ la\ liste\ des\ sorties\ d'une\ salle\ sous\ forme\ d'une\ chaine\ de\ caract\u00E8re\r\n\ @return\ \ \ \ \ \ Retourne\ la\ liste\ des\ sorties\ d'une\ pi\u00E8ce\r\n
comment21.params=
comment21.target=java.lang.String\ getCharactersList()
comment21.text=\r\n\ Retourne\ la\ liste\ des\ personnages\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ La\ liste\ des\ objets\ pr\u00E9sent\ dans\ la\ pi\u00E8ce\r\n
comment22.params=pSomething
comment22.target=java.lang.String\ saySomething(java.lang.String)
comment22.text=\r\n\ Retourne\ la\ liste\ des\ personnages\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ La\ liste\ des\ objets\ pr\u00E9sent\ dans\ la\ pi\u00E8ce\r\n
comment3.params=
comment3.target=java.lang.String\ getDescription()
comment3.text=\r\n\ Retourne\ la\ description\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ La\ description\ de\ la\ pi\u00E8ce\r\n
comment4.params=pObjName\ pObjD\ pObjW\ pObjLD
comment4.target=Item\ addItem(java.lang.String,\ java.lang.String,\ int,\ java.lang.String)
comment4.text=\r\n\ Permet\ d'ajouter\ un\ Item\ (Avec\ description\ pr\u00E9cise)\r\n\ @param\ pObjName\ String\ Nom\ de\ l'Item\r\n\ @param\ pObjD\ String\ Description\ de\ l'Item\r\n\ @param\ pObjW\ int\ Poids\ de\ l'Item\r\n\ @param\ pObjLD\ String\ Description\ pr\u00E9cise\ de\ l'Item\r\n\ @return\ \ Le\ nouvel\ item\r\n
comment5.params=pObjName\ pObjD\ pObjW
comment5.target=Item\ addItem(java.lang.String,\ java.lang.String,\ int)
comment5.text=\r\n\ Permet\ d'ajouter\ un\ Item\r\n\ @param\ pObjName\ String\ Nom\ de\ l'Item\r\n\ @param\ pObjD\ String\ Description\ de\ l'Item\r\n\ @param\ pObjW\ int\ Poids\ de\ l'Item\r\n\ @return\ \ Le\ nouvel\ item\r\n
comment6.params=pObjName\ pItem
comment6.target=void\ addItem(java.lang.String,\ Item)
comment6.text=\r\n\ Permet\ d'ajouter\ un\ Item\r\n\ @param\ pObjName\ String\ Nom\ de\ l'Item\r\n\ @param\ pItem\ Item\ Objet\ \u00E0\ ajouter\r\n
comment7.params=
comment7.target=java.lang.String\ getItemList()
comment7.text=\r\n\ Retourne\ la\ liste\ des\ items\ d'une\ pi\u00E8ce\r\n\ @return\ \ \ \ \ \ La\ liste\ des\ objets\ pr\u00E9sent\ dans\ la\ pi\u00E8ce\r\n
comment8.params=pItemName
comment8.target=Item\ takeItem(java.lang.String)
comment8.text=\r\n\ Supprime\ un\ objet\ d'une\ salle\ et\ le\ renvoie\ pour\ \u00EAtre\ ajout\u00E9\ \u00E0\ l'inventaire\ du\ joueur\r\n\ Retourne\ null\ si\ l'article\ est\ introuvable\ dans\ la\ pi\u00E8ce\r\n\ @param\ \ \ \ \ \ \ pItemName\ \ \ Nom\ de\ l'item\ \r\n\ @return\ \ \ \ \ \ L'objet\ Item\ pris\ dans\ la\ pi\u00E8ce\r\n
comment9.params=pItemName
comment9.target=Item\ findItem(java.lang.String)
comment9.text=\r\n\ Rechercher\ un\ \u00E9l\u00E9ment\ dans\ une\ pi\u00E8ce\ \r\n\ Retourne\ null\ si\ l'article\ est\ introuvable\ dans\ la\ pi\u00E8ce\r\n\ @param\ \ \ \ \ \ \ pItemName\ \ \ Nom\ de\ l'item\ \r\n\ @return\ \ \ \ \ \ L'objet\ Item\ pris\ dans\ la\ pi\u00E8ce\r\n
numComments=23
